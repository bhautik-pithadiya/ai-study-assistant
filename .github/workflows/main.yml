name: Build-and-Deploy

# ────────── GitHub-token access ──────────
permissions:
  contents: read     # pull source
  packages: write    # push to GHCR

# ────────── Triggers ──────────
on:
  push:
    branches: [ main ]     # run on every push to main
  workflow_dispatch:       # manual run button

# ────────── Re-usable labels ──────────
env:
  IMAGE: ghcr.io/${{ github.repository }}   # e.g. ghcr.io/bhautik-pithadiya/cheating-app
  TAG:   ${{ github.sha }}                  # image tag = commit hash

# ═══════════════════════════════════════════════════════════════
jobs:
# ─────────────────────── 1. Build & publish ────────────────────
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

# ─────────────────────── 2. Deploy to GCP VM ───────────────────
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SSH_HOST }}     # e.g. 35.225.50.125
          username: ${{ secrets.SSH_USER }}     # the user tied to the VM-side public key
          key:      ${{ secrets.SSH_KEY }}      # **private** key text
          port:     ${{ secrets.SSH_PORT || 22 }}

          script: |
            set -e
            IMAGE="${{ env.IMAGE }}"
            TAG="${{ env.TAG }}"

            echo "🔐  Logging in to GHCR…"
            docker login ghcr.io \
              -u "${{ secrets.REGISTRY_USER }}" \
              -p "${{ secrets.REGISTRY_PAT }}"

            echo "⬇️  Pulling ${IMAGE}:${TAG}…"
            docker pull "${IMAGE}:${TAG}"

            echo "♻️  Recreating container…"
            docker stop cheating-app || true
            docker rm   cheating-app || true
            docker run -d --name cheating-app -p 8000:8000 \
                       "${IMAGE}:${TAG}"

            echo "✅ Deploy complete"
